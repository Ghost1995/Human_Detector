# We need a decent ubuntu dist
sudo: required
dist: trusty

# Modern cpp settings from
#  http://genbattle.bitbucket.org/blog/2016/01/17/c++-travis-ci/
language: cpp
matrix:
  include:
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - george-edison55-precise-backports
          packages:
            - g++-5
            - cmake
            - cmake-data
      env: COMPILER=g++-5

before_install:
  - pip install --user cpp-coveralls
install:
  - sudo apt-get install -y -qq lcov
  - sudo apt-get install build-essential checkinstall cmake pkg-config yasm gfortran git
  - sudo apt-get install libjpeg8-dev libjasper-dev libpng12-dev
  - sudo apt-get install libtiff5-dev
  - sudo apt-get install libavcodec-dev libavformat-dev libswscale-dev libdc1394-22-dev
  - sudo apt-get install libxine2-dev libv4l-dev
  - sudo apt-get install libgstreamer0.10-dev libgstreamer-plugins-base0.10-dev
  - sudo apt-get install libqt4-dev libgtk2.0-dev libtbb-dev
  - sudo apt-get install libatlas-base-dev
  - sudo apt-get install libfaac-dev libmp3lame-dev libtheora-dev
  - sudo apt-get install libvorbis-dev libxvidcore-dev
  - sudo apt-get install libopencore-amrnb-dev libopencore-amrwb-dev
  - sudo apt-get install x264 v4l-utils
script:
  - export CXX=$COMPILER;
  - git clone https://github.com/opencv/opencv.git
  - cd opencv
  - git checkout 3.3.0
  - cd ..
  - git clone https://github.com/opencv/opencv_contrib.git
  - cd opencv_contrib
  - git checkout 3.3.0
  - cd ..
  - cd opencv
  - mkdir build
  - cd build
  - cmake -D CMAKE_BUILD_TYPE=RELEASE \
          -D CMAKE_INSTALL_PREFIX=/usr/local \
          -D INSTALL_C_EXAMPLES=ON \
          -D WITH_TBB=ON \
          -D WITH_V4L=ON \
          -D WITH_QT=ON \
          -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules \
          -D BUILD_EXAMPLES=ON ..
  - sudo make install
  - sudo sh -c 'echo "/usr/local/lib" >> /etc/ld.so.conf.d/opencv.conf'
  - sudo ldconfig
  - cd ../..
  - mkdir build
  - cd build
  - cmake -DCOVERAGE=ON -DCMAKE_BUILD_TYPE=Debug ../
  - make
  - make code_coverage
  - test/cpp-test

after_success:
  - coveralls --root .. -E ".*external.*" -E ".*CMakeFiles.*" -E ".*test/.*.cpp.*"

notifications:
  email: false
